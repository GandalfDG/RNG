
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
test is a Catch v2.12.1 host application.
Run with -? for options

-------------------------------------------------------------------------------
32-bit Galois LFSR
  default taps are the taps for maximal sequence
-------------------------------------------------------------------------------
test/test_main.cpp:12
...............................................................................

test/test_main.cpp:14: PASSED:
  REQUIRE( rng.getTaps().size() == 4 )
with expansion:
  4 == 4

test/test_main.cpp:15: PASSED:
  REQUIRE( rng.getTaps()[0] == 32 )
with expansion:
  32 == 32

test/test_main.cpp:16: PASSED:
  REQUIRE( rng.getTaps()[3] == 25 )
with expansion:
  25 == 25

test/test_main.cpp:18: PASSED:
  REQUIRE( rng.getTapBinary() == 0xa3000000 )
with expansion:
  2734686208 (0xa3000000)
  ==
  2734686208 (0xa3000000)

-------------------------------------------------------------------------------
32-bit Galois LFSR
  seed the RNG
-------------------------------------------------------------------------------
test/test_main.cpp:22
...............................................................................

test/test_main.cpp:24: PASSED:
  REQUIRE( rng.getSeed() == seed )
with expansion:
  123 == 123

-------------------------------------------------------------------------------
32-bit Galois LFSR
  get first value out
-------------------------------------------------------------------------------
test/test_main.cpp:28
...............................................................................

test/test_main.cpp:30: PASSED:
  REQUIRE( rng.rand() == 0xa300003d )
with expansion:
  2734686269 (0xa300003d)
  ==
  2734686269 (0xa300003d)

-------------------------------------------------------------------------------
32-bit Galois LFSR
  get random value in range
-------------------------------------------------------------------------------
test/test_main.cpp:33
...............................................................................

test/test_main.cpp:35: PASSED:
  REQUIRE( rng.rand(1u, 6u) == 6 )
with expansion:
  6 == 6

-------------------------------------------------------------------------------
Shuffle algorithm implementation
  small vector shuffle
-------------------------------------------------------------------------------
test/test_main.cpp:45
...............................................................................

test/test_main.cpp:49: PASSED:
  REQUIRE( deck[0] != 1 )
with expansion:
  4 != 1

===============================================================================
All tests passed (8 assertions in 2 test cases)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
test is a Catch v2.12.1 host application.
Run with -? for options

-------------------------------------------------------------------------------
Is the LFSR maximal?
  ensure maximal sequence
-------------------------------------------------------------------------------
test/test_main.cpp:60
...............................................................................

test/test_main.cpp:65: PASSED:
  REQUIRE( count == (4294967295U) )
with expansion:
  4294967295 (0xffffffff)
  ==
  4294967295 (0xffffffff)

===============================================================================
All tests passed (1 assertion in 1 test case)